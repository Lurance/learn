{"version":3,"sources":["../字符串扩展.js"],"names":["d","i","console","log","includes","padStart","padEnd","foo","bar","tag","array","var1","var2","a","b"],"mappings":";;;;;;AAAAA,E,CAAC;;;;;;;AAED,yBAAc,OAAd,8HAAuB;AAAA,YAAdC,CAAc;;AACnBC,gBAAQC,GAAR,CAAYF,CAAZ;AACH;;AAED;;;;;;;;AASA;AACA;AACA;;;;;;;;;;;;;;;;AACAC,QAAQC,GAAR,CAAY,QAAQC,QAAR,CAAiB,GAAjB,CAAZ,E,CAAoC;AACpCF,QAAQC,GAAR,CAAY,QAAQC,QAAR,CAAiB,GAAjB,EAAsB,CAAtB,CAAZ,E,CAAuC;;AAEvC;;AAEA;AACAF,QAAQC,GAAR,CAAY,MAAME,QAAN,CAAe,CAAf,CAAZ,E,CAAgC;AAChCH,QAAQC,GAAR,CAAY,MAAME,QAAN,CAAe,CAAf,EAAkB,GAAlB,CAAZ,E,CAAqC;AACrCH,QAAQC,GAAR,CAAY,MAAMG,MAAN,CAAa,CAAb,EAAgB,GAAhB,CAAZ,E,CAAmC;AACnCJ,QAAQC,GAAR,CAAY,MAAMG,MAAN,CAAa,CAAb,CAAZ,E,CAA8B;;;AAG9B;;AAEA;AACA,IAAIC,MAAM,KAAV;AACA,IAAIC,MAAM,KAAV;AACAN,QAAQC,GAAR,aAAsBI,GAAtB,iBAAqCC,GAArC;;AAEA;;AAEA;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC5BV,YAAQC,GAAR,CAAYO,KAAZ,EAAmBC,IAAnB,EAAyBC,IAAzB;AACH;AACD,IAAIC,IAAI,CAAR;AACA,IAAIC,IAAI,CAAR;AACA;AACA;AACAL,qBAAYI,IAAIC,CAAhB,EAA2BD,IAAIC,CAA/B,E,CAAoC;AACpC;AACA;;AAEA","file":"字符串扩展.js","sourcesContent":["d//ES6为字符串提供了遍历接口\n\nfor (let i of 'hello') {\n    console.log(i)\n}\n\n/*\nh\ne\nl\nl\no\n */\n\n\n//includes()方法\n//startsWith()方法\n//endsWith()方法\nconsole.log('hello'.includes('h')); // true\nconsole.log('hello'.includes('h', 1)); // false 从e开始搜索\n\n//repeat()方法将源字符串重复n次\n\n//padStart(), padEnd()长度补全\nconsole.log('hhh'.padStart(5)); //  hhh\nconsole.log('hhh'.padStart(5, 'a')); //aahhh\nconsole.log('hhh'.padEnd(5, 'a')); //hhhaa\nconsole.log('hhh'.padEnd(5)); //hhhaa\n\n\n//模版字符串\n\n//嵌入变量\nlet foo = 'abc';\nlet bar = 'def';\nconsole.log(`One is ${foo}, Tow is ${bar}`);\n\n//大括号内部以放入任意的javascript表达式，可以进行运算，以及引用对象属性\n\n//标签模版\n\nfunction tag(array, var1, var2) {\n    console.log(array, var1, var2);\n}\nlet a = 5;\nlet b = 4;\n// 标签模版不是模版，而是函数调用的一种特殊形式\n// 如果模版字符串中有参数就不是一种简单的调用了，而是会将模版字符串先处理成多个参数，再调用函数\ntag`Hello ${a + b} world ${a * b}`; // [ 'Hello ', ' world ', '' ] 9 20\n//第一个参数是一个数组，代表了模版字符串中没有变量替换的部分 [ 'Hello ', ' world ', '' ]\n//其他参数都是各个变量被替换后的值\n\n// String.raw()返回一个斜杠都被转义的字符串，对应于替换变量后的模版字符串\n"]}