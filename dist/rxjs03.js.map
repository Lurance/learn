{"version":3,"sources":["../rxjs03.js"],"names":["Rx","require","source1","Observable","from","repeat","subscribe","console","log","value","source2","interval","map","x","source3","scan","origin","next"],"mappings":";;AAAA;;AAEA,IAAMA,KAAMC,QAAQ,MAAR,CAAZ;;AAEA;AACA;AACA;;AAEA,IAAMC,UAAUF,GAAGG,UAAH,CAAcC,IAAd,CAAmB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAnB,EACXC,MADW,CACJ,CADI,EAEXC,SAFW,CAED;AAAA,WAASC,QAAQC,GAAR,CAAYC,KAAZ,CAAT;AAAA,CAFC,CAAhB;AAGA;;;AAGA;AACA;AACA;;AAEA,IAAMC,UAAUV,GAAGG,UAAH,CAAcQ,QAAd,CAAuB,IAAvB,EACXC,GADW,CACP;AAAA,WAAKC,IAAI,CAAT;AAAA,CADO,EAEXP,SAFW,CAED;AAAA,WAASC,QAAQC,GAAR,CAAYC,KAAZ,CAAT;AAAA,CAFC,CAAhB;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAMK,UAAUd,GAAGG,UAAH,CAAcC,IAAd,CAAmB,OAAnB,EACXW,IADW,CACN,UAACC,MAAD,EAASC,IAAT;AAAA,WAAkBD,SAASC,IAA3B;AAAA,CADM,EAC2B,EAD3B,EAEXX,SAFW,CAED;AAAA,WAASC,QAAQC,GAAR,CAAYC,KAAZ,CAAT;AAAA,CAFC,CAAhB;AAGA;AACA;AACA;AACA;AACA","file":"rxjs03.js","sourcesContent":["// Rxjs 操作符\n\nconst Rx =  require('rxjs');\n\n// Creation Operators（创造是操作符）\n// repeat操作符\n// 重复 count 次，源 Observable 发出的值。\n\nconst source1 = Rx.Observable.from(['a', 'b', 'c'])\n    .repeat(3)\n    .subscribe(value => console.log(value));\n// 打印3次a b c\n\n\n// 变换操作符\n// map\n// 对 Observable 对象发出的每个值，使用指定的 project 函数，进行映射处理。\n\nconst source2 = Rx.Observable.interval(1000)\n    .map(x => x * 2)\n    .subscribe(value => console.log(value));\n\n// mapTo\n// 对 Observable 对象发出的每个值，映射成固定的值。\n\n// scan\n// public scan(accumulator: function(acc: R, value: T, index: number): R, seed: T | R): Observable<R>\n// 对 Observable 发出值，执行 accumulator 指定的运算，可以简单地认为是 Observable 版本的 Array.prototype.reduce\n// reduce? https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n// 累加\n\nconst source3 = Rx.Observable.from('hello')\n    .scan((origin, next) => origin + next, '')\n    .subscribe(value => console.log(value));\n// h\n// he\n// hel\n// hell\n// hello\n\n"]}